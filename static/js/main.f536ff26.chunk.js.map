{"version":3,"sources":["components/TaskChange.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskChange","props","onChange","event","name","target","value","setState","onSubmitForm","preventDefault","onSubmit","state","onClear","status","componentDidMount","taskEdit","id","nextProps","this","className","type","required","onClick","reciveOpenTask","Component","Search","e","onSearch","keyworld","placeholder","Sort","sortBy","sortValue","a","sort","by","onSorting","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","href","Control","TaskItem","onChangeStatus","onChangeStatusItem","taskvalue","onDelete","onUpdate","tasks","index","TaskList","onFilter","filterName","filterStatus","elements","tasklist","map","item","receiveChangeStatus","App","localStorage","getItem","taskGetStorage","JSON","parse","toggleFormAU","openTaskChange","taskEditing","onCloseForm","onShowForm","data","getIdRandom","push","findIndex","task","taskList","setItem","stringify","temp","valueDelete","filter","editItem","find","toLowerCase","Math","random","toString","substring","indexOf","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f536ff26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskChange extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"status\") {\r\n            value = event.target.value === \"true\" ? true : false;\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClear();\r\n    }\r\n    onClear = () => {\r\n        this.setState({\r\n            name: '',\r\n            status: false\r\n        })\r\n    }\r\n    componentDidMount = () => {\r\n        if (this.props.taskEdit) {\r\n            let { id, name, status } = this.props.taskEdit\r\n            this.setState({\r\n                id: id,\r\n                name: name,\r\n                status: status\r\n            })\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.taskEdit) {\r\n            this.setState({\r\n                id: nextProps.taskEdit.id,\r\n                name: nextProps.taskEdit.name,\r\n                status: nextProps.taskEdit.status\r\n            })\r\n        } else if (nextProps && nextProps.taskEdit == null) {\r\n            this.setState({\r\n                id: '',\r\n                name: '',\r\n                status: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        var { id } = this.state;\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">{id === '' ? 'Thêm Công Việc' : 'Cập nhật công việc'}</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form onSubmit={this.onSubmitForm}>\r\n                            <div className=\"form-group\">\r\n                                <label>Tên :</label>\r\n                                <input type=\"text\" className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                            </div>\r\n                            <label>Trạng Thái :</label>\r\n                            <select className=\"form-control\" required=\"required\"\r\n                                name=\"status\"\r\n                                value={this.state.status}\r\n                                onChange={this.onChange}\r\n                            >\r\n                                <option value={true}>Kích Hoạt</option>\r\n                                <option value={false}>Ẩn</option>\r\n                            </select>\r\n                            <br />\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-warning\">Lưu</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={this.props.reciveOpenTask}>Hủy Bỏ</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskChange;","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyworld: ''\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyworld)\r\n    }\r\n    render() {\r\n        var { keyworld } = this.state;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        name='keyworld'\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nhập từ khóa...\"\r\n                        value={keyworld}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <span className=\"input-group-btn\"\r\n                        onClick={this.onSearch}\r\n                    >\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                            <span className=\"fa fa-search mr-5\" />Tìm\r\n                                </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sort: {\r\n                by: 'name',\r\n                value: 1\r\n            }\r\n        }\r\n    }\r\n    onClick = async (sortBy, sortValue) => {\r\n        await this.setState({\r\n            sort: {\r\n                by: sortBy,\r\n                value: sortValue\r\n            }\r\n        });\r\n        this.props.onSorting(this.state.sort);\r\n    }\r\n    render() {\r\n        var { sort } = this.state;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={() => { this.onClick('name', 1) }}>\r\n                            <a role=\"button\" href=\"#/\" >\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên A-Z</span>\r\n                                <i className={(sort.by === 'name' && sort.value === 1) ? 'fas fa-check float-right' : ''}></i>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={() => { this.onClick('name', -1) }}>\r\n                            <a role=\"button\" href=\"#/\">\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên Z-A</span>\r\n                                <i className={(sort.by === 'name' && sort.value === -1) ? 'fas fa-check float-right' : ''}></i>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li onClick={() => { this.onClick('status', 1) }}\r\n                        ><a role=\"button\" href=\"#/\">Trạng Thái Kích Hoạt\r\n                          <i className={(sort.by === 'status' && sort.value === 1) ? 'fas fa-check float-right' : ''}></i>\r\n                            </a></li>\r\n                        <li onClick={() => { this.onClick('status', -1) }}>\r\n                            <a role=\"button\" href=\"#/\">Trạng Thái Ẩn\r\n                          <i className={(sort.by === 'status' && sort.value === -1) ? 'fas fa-check float-right' : ''}></i>\r\n\r\n                            </a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <Search\r\n                    onSearch={this.props.onSearch}\r\n                />\r\n                <Sort\r\n                    onSorting={this.props.onSorting}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    onChangeStatus = (value) => {\r\n        this.props.onChangeStatusItem(this.props.taskvalue.id);\r\n        // console.log(123)\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.taskvalue.id)\r\n    };\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.taskvalue.id)\r\n    }\r\n    render() {\r\n        var tasks = this.props.taskvalue;\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{this.props.index + 1}</td>\r\n                    <td>{tasks.name}</td>\r\n                    <td className=\"text-center\" onClick={this.onChangeStatus}>\r\n                        <span className={tasks.status === true ? 'label label-success' : 'label label-danger'}>{tasks.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                            <i className=\"fas fa-exchange-alt mr-5\"></i>\r\n                        </span>\r\n\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-warning\"\r\n                            onClick={this.onUpdate}\r\n                        >\r\n                            <span className=\"fa fa-pencil mr-5\" />Sửa</button>&nbsp;\r\n                <button type=\"button\" className=\"btn btn-danger\"\r\n                            onClick={this.onDelete}\r\n                        >\r\n                            <span className=\"fa fa-trash mr-5\" />Xóa\r\n                            </button>\r\n                    </td>\r\n                </tr>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        var { name, value } = e.target;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        )\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    render() {\r\n        var { filterName, filterStatus } = this.state;\r\n        var { tasklist } = this.props;\r\n        var elements = tasklist.map((item, index) => {\r\n            return <TaskItem key={item.id} index={index}\r\n                taskvalue={item}\r\n                onChangeStatusItem={this.props.receiveChangeStatus}\r\n                onDelete={this.props.onDelete}\r\n                onUpdate={this.props.onUpdate}\r\n            />\r\n        })\r\n\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td />\r\n                                <td>\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"filterName\"\r\n                                        value={filterName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"filterStatus\"\r\n                                        value={filterStatus}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={-1}>Tất Cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td />\r\n                            </tr>\r\n                            {elements}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport TaskChange from './components/TaskChange'\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      openTaskChange: false,\n      taskEditing: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyworld: '',\n      sortBy: 'name',\n      sortValue: 1\n    }\n  }\n  getIdRandom() {\n    return Math.random().toString(36).substring(2, 8) + Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 7) + Math.random().toString(36).substring(2, 15);\n  }\n  componentDidMount = () => {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var taskGetStorage = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: taskGetStorage\n      });\n    }\n  }\n  // TOGGGle from add to do \n  toggleFormAU = () => {\n    if (this.state.openTaskChange && this.state.taskEditing !== null) {\n      this.setState({\n        openTaskChange: true,\n        taskEditing: null\n      })\n    }\n    else {\n      this.setState({\n        openTaskChange: !this.state.openTaskChange,\n        taskEditing: null\n      })\n    }\n  }\n  // Close form \n  onCloseForm = () => {\n    this.setState({\n      openTaskChange: false\n    })\n  }\n  // showForm\n  onShowForm = () => {\n    this.setState({\n      openTaskChange: true\n    })\n  }\n  // \n  onSubmit = (data) => {\n    let { tasks } = this.state;\n    if (data.id === '') {\n      data.id = this.getIdRandom();\n      tasks.push(data);\n    } else {\n      var index = tasks.findIndex(task => task.id === data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      taskList: tasks,\n      taskEditing: null\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  onChangeStatus = (id) => {\n    let { tasks } = this.state;\n    let temp = tasks.map(task => {\n      if (task.id === id) {\n        task.status = !task.status\n      }\n      return task;\n    })\n    this.setState({\n      tasks: temp\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n    // console.log(tasks)\n  }\n  // Delete\n  onDelete = (id) => {\n    let { tasks } = this.state;\n    let valueDelete = tasks.filter(task => task.id !== id)\n    this.setState({\n      tasks: valueDelete\n    })\n    localStorage.setItem('tasks', JSON.stringify(valueDelete));\n    this.onCloseForm();\n  }\n  // Sửa\n  onUpdate = (value) => {\n    this.onShowForm();\n    var { tasks } = this.state;\n    var editItem = tasks.find(task => task.id === value);\n    this.setState({\n      taskEditing: editItem\n    })\n  }\n  // filter\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = +filterStatus;\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    })\n  }\n  onSearch = (data) => {\n    this.setState({\n      keyworld: data\n    })\n  }\n  onSorting = (sort) => {\n    this.setState({\n      sortBy: sort.by,\n      sortValue: sort.value\n    })\n  }\n\n  render() {\n    var { tasks, openTaskChange, taskEditing, filter, keyworld, sortBy, sortValue } = this.state;\n    // console.log(tasks)\n    // console.log(sortBy, sortValue)\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        })\n      }\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) return tasks;\n        else return task.status === (filter.status === 1 ? true : false);\n      })\n    }\n    if (keyworld) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyworld.toLowerCase()) !== -1;\n      })\n    }\n    if (sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      })\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      })\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          {/* thêm , update công việc */}\n          {openTaskChange === true ?\n            <TaskChange\n              onSubmit={this.onSubmit}\n              reciveOpenTask={this.toggleFormAU}\n              taskEdit={taskEditing}\n            /> : ''}\n          <div className={openTaskChange ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.toggleFormAU}>\n              <span className=\"fa fa-plus mr-5\" />Thêm công việc\n            </button>\n            {/* Control task list */}\n            <Control\n              onSearch={this.onSearch}\n              onSorting={this.onSorting}\n            />\n            {/* task list */}\n            <TaskList\n              tasklist={tasks}\n              receiveChangeStatus={this.onChangeStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}